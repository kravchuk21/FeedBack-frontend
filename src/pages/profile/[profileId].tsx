import type {GetServerSidePropsContext, NextPage,} from 'next'
import Head from 'next/head'
import {Api,} from '../api'
import {UserInterface,} from '../../interfaces/user.interface'
import React from 'react'
import Avatar from '../../components/Avatar'
import Title from '../../components/Title'
import Typography from '../../components/Typography'
import Link from 'next/link'
import {Routes,} from '../../constants/routes'
import IconButton from '../../components/IconButton'
import {dateFormat,} from '../../utils/dateFormat'

interface ProfilePageProps extends Record<string, unknown> {
	data: UserInterface;
}

const Profile: NextPage<ProfilePageProps> = ({data,}) => {
	return (
		<div>
			<Head>
				<title>FeedBack | Profile</title>
				<meta name="description" content="Generated by create next app"/>
				<link rel="icon" href="/public/favicon.ico"/>
			</Head>

			<div className="flex items-baseline">
				<Avatar size="large" path={''} fullName={data.fullName} avatarUrl={data.avatar}/>
				<div className="ml-3.5">
					<Title>{data.fullName}</Title>
				</div>
			</div>
			<div>
				<Typography>E-mail: {data.email}</Typography>
				<Typography>Created account: {dateFormat(data.createdAt)}</Typography>
			</div>
			<Link href={Routes.SETTINGS}>
				<IconButton iconPath="/assets/icons/mail.svg"/>
			</Link>
		</div>
	)
}

export async function getServerSideProps(ctx: GetServerSidePropsContext) {
	if (!ctx.params) {
		return {
			notFound: true,
		}
	}
	const userId = ctx.params?.profileId

	if (!userId) {
		return {
			notFound: true,
		}
	}

	try {
		if (userId && typeof userId === 'string') {
			const data = await Api(ctx).user.getUser({userId,})
			return {props: {data,},}
		} else {
			return {
				notFound: true,
			}
		}
	} catch {
		return {
			notFound: true,
		}
	}
}

export default Profile
